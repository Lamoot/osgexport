# -*- python-indent: 4; coding: iso-8859-1; mode: python -*-
# Copyright (C) 2008-2011 Cedric Pinson
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
#
# Authors:
#  Cedric Pinson <cedric.pinson@plopbyte.com>
#

import unittest
import math
import os
import sys
sys.path.insert(0, "@EXPORTER@")

import bpy
import osg
from osg.osgobject import *
from osg.osgdata import *


def close(a, b, threshold):
    for i in range(0, len(a)):
        if math.fabs(a[i] - b[i]) > threshold:
            return False
    return True


def makeSceneActive(scene):
    bpy.context.screen.scene = bpy.data.scenes[scene]


class Exporter(unittest.TestCase):
    # ------------------------------------------------------
    def setUp(self):
        osg.osgobject.Object.resetWriter()
        self.filename = "./BugMultiMaterial.osgt"

    def tearDown(self):
        try:
            os.remove(filename)
        except:
            pass

    def checkFile(self, name):
        return os.path.isfile(name)

    def test_BlenderObjectBugMultiMaterial(self):
        makeSceneActive("BugMultiMaterial")
        exporter = Export()
        exporter.config.initFilePaths(self.filename)
        exporter.process()
        exporter.write()
        self.assertTrue(self.checkFile(self.filename))


if __name__ == '__main__':
    suite = unittest.TestLoader().loadTestsFromTestCase(Exporter)
    result = unittest.TextTestRunner(verbosity=2).run(suite)
    sys.exit(not result.wasSuccessful())
